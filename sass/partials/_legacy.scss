// *** LEGACY VARS (to be soon removed) ***

$site-width: 960px;

// Grid vars
$columns: 12;
$column-width-px: 60px;
$gutter-width-px: 20px;
$site-width-px: 960px;
$grid-mode: 'gutters'; // gutters, gutter-left or same-gutter


// Fluid vars
$screen-width-px: 1024px;
$site-width: percentage($site-width-px / $screen-width-px); // 960 / 1024 = 93.75%
$gutter-width : percentage($gutter-width-px / $site-width-px); // 26 / 960  = 2.708 %


// *** LEGACY MIXINS (to be soon removed) ***

//  =====================
//  = Fluid grid Mixins =
//  =====================

// base column

@mixin column() {
  float: left;
  @include box-sizing(border-box);
  min-height:1px;
}

@mixin first() {
  clear:both;
  margin-left:0;
}

// Responsive grid
// 1. cols : number of grid columns

@mixin fluid-grid($cols) {

    $target : $cols * $column-width-px + ($cols - 1) * $gutter-width-px;
    width : percentage( $target / $site-width-px );

    // cols have semi gutter on left and right (ex: col=54 & gut=13 + 13)
    // use when container is transparent
    @if $grid-mode == 'gutters' {
        margin-right : $gutter-width / 2;
        margin-left : $gutter-width / 2;
    }

    // the 13 gutters have same size (ex : col=54 & gut=24)
    // use when container is displayed
    @if $grid-mode == 'same-gutter' {
        margin-left : $gutter-width;
    }

    // each col has a left gutter, except for the first one (ex: col=58 & gut=24)
    // prefer the gutters method
    @if $grid-mode == 'gutter-left' {
        margin-left : $gutter-width;

        &:first-child {
            margin-left:0;
        }
    }
}


// In addition to mixin grid
// add a clearfix and no margin for the first element of each line
// 1. cols : number of grid columns

@mixin gallery($cols) {

    $nb: $columns / $cols;

    &:nth-child(#{$nb}n+1) {
        clear:both;

        @if $grid-mode == 'gutter-left' {
          margin-left:0;
        }
    }
}